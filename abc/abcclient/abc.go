// Code generated by goctl. DO NOT EDIT.
// Source: abc.proto

package abcclient

import (
	"context"

	"greet/abc/abc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = abc.Request
	Response = abc.Response

	Abc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultAbc struct {
		cli zrpc.Client
	}
)

func NewAbc(cli zrpc.Client) Abc {
	return &defaultAbc{
		cli: cli,
	}
}

func (m *defaultAbc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := abc.NewAbcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
